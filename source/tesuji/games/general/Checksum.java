/**
 * Project: Tesuji Go Framework.<br>
 * <br>
 * <font color="#CC6600"><font size=-1> Copyright (c) 1985-2006 Mark Boon<br>
 * All rights reserved.<br>
 * <br>
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * provided that the above copyright notice(s) and this permission notice appear
 * in all copies of the Software and that both the above copyright notice(s) and
 * this permission notice appear in supporting documentation.<br>
 * <br>
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
 * IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.<br>
 * <br>
 * <font color="#00000"><font size=+1>
 * 
 */

package tesuji.games.general;

import static tesuji.games.general.ColorConstant.*;

/**
 * 
 */
public class Checksum
{
	public static final long UNINITIALIZED = -1;
	
	private long _checksum;
	
	private static final long[] _randomChecksums = new long[]
	{
		-1928908068,-1513723866,1416845399,-1573363490,-1557687521,1956467968,
		-193677260,1122802245,-78153116,814096112,704047048,-574951599,
		740878406,-498879422,1827456015,1489449388,-1896965344,1347994881,
		-217518653,1542843586,951915021,34127864,-1245855392,1290236348,
		-10056471,1029034674,1748984097,1409404551,2105346125,168029561,
		-2055165440,1483002830,123029142,798343001,1110719416,-717062,
		-1274952739,860796701,-1764920123,-1302933704,1549058302,1580205136,
		931034210,-1763040397,-1780466795,-1224829892,-1640294007,-1814766764,
		-1208290564,37558510,28705782,1358399048,-659265971,-919667409,
		1449365795,888631929,-790571675,1389654923,1450500428,1698016979,
		
		890453726,-1510708916,2010960747,-875165185,1604215058,-2012246401,
		-280033988,213652330,1687534366,-2107026963,-1220487366,-1853220033,
		483101916,-620437470,-2065602401,2141466215,500487399,-1734071191,
		-819620250,-1104470641,-1090432614,-2100501811,-843120309,-201034207,
		409370896,532574744,1998784457,-1965979319,-2775772,-1216476201,
		-2105227238,-1510644495,233028465,1339006035,1741955898,764663748,
		-1763540398,-1338714984,1539749603,-930123987,-1276806686,1626284400,
		1473175953,-544571816,1002365181,-1509641112,270451583,-1746333649,
		-1006455748,-1976206647,-5621081,-674302371,-1526548741,-771349601,
		1495590596,1209843278,-153918634,96083637,385819986,1333180460,
		
		-1907950554,1783863958,-294709364,339800802,66027272,144082572,
		1449564780,2124102427,-1407079595,-1492938589,-2020061267,862724931,
		-1578107094,-840947290,1987547852,-1688864636,-1188251040,-1053917664,
		-617118463,-575026742,-1972642668,-1951301796,768214346,-524589378,
		1811882528,-252978332,-1528581792,1245666765,1962609695,2032140549,
		905374142,-2081948382,2066864747,1817387208,-1741304672,-1307224410,
		406227617,-783865863,1167341824,-1091684858,-1571038437,1837024418,
		1908788890,1297362348,800410868,-918788208,339471081,-940865084,
		-1777001465,730021964,-450187737,1393842487,1863273199,-1709687774,
		1535506000,-671847246,284595463,-562296035,-1375902690,-59944288,
		
		-1847689878,2096241415,-754428659,656562730,-929546253,-1115775635,
		-2099844777,2138476861,1303960638,-1461485928,844955384,-309540732,
		1989153188,44330900,441267371,373853800,1530224449,1409539372,
		823912938,1649160470,-763820815,-469436182,788086512,-117784456,
		1945108301,-1184190693,-1998909511,-1099494855,-1796665422,-1699237432,
		1987313152,1554423749,1283241017,254766269,-281778113,958975302,
		1937320895,1590956421,-1437438798,2086839464,-1602980387,-1905554070,
		515959379,192279188,700534768,1718980985,-2110815778,-1907997065,
		644954642,1849002619,-854224947,1819799675,1834513437,-340809476,
		-1230883748,-882049652,-1794507602,-425273017,-1261744251,-1807335596,
		
		-153644769,647876198,-29131260,1827291966,-1479167349,819393573,
		-1954799276,-1158064011,2127929037,1297447952,313087919,-1478980123,
		325866624,-2082647184,163511825,413774392,-1142123265,-1712314032,
		-1452427980,-1253026343,-1872241819,382889341,-399844205,-445725196,
		1739745933,1116098176,2099745387,-832040334,-681689326,600751013,
		-547899723,1482689281,952047951,-2144443657,1164895788,708394249,
		-1578535072,-504777663,-1512078772,-1416169033,-391276514,-1962811890,
		-1193564081,31084021,-1533052123,-2026188632,-195545039,338168174,
		756211921,-1692976869,-1878601555,-1956332658,-1726397381,1322944562,
		-2107977667,-869223809,-1064835008,-393745544,-2088282339,15728172,
		
		955173241,1877037879,159269959,214199617,1503897667,-1435865732,
		1257583990,-1752002777,968360887,543599120,1063029031,184398348,
		-1325459022,416823167,-1628938093,-1972902440,1410197966,-1702689773,
		-577988171,-788680,2100507238,1827258585,905630537,277117078,
		1099265172,357423514,-1683657527,599635485,2027351093,-575373086,
		-926841999,1610727865,-1195729949,-908090628,826341436,-1368103148,
		1501708025,-1571622669,265710308,-1258866791,1900172946,-296757359,
		1475688677,-667975309,-657645175,-170227869,-1026523015,1115575182,
		615882361,-1128861774,-983883364,-653754988,-1404072771,207994250,
		-1723220984,1152290033,-2001900943,1798070965,856403513,-384446002,
		
		-1885243282,537594816,1289164393,-258057448,1472246608,868788724,
		1503515796,1081014394,945544051,1793386845,-1827502219,2137470813,
		1216835824,1285766086,-274100858,355297518,1578479779,537382586,
		630457858,690067735,312056360,-304836477,-1379479067,-1570203260,
		-1150882344,2072850989,-1124889366,669251487,1871653072,1349853571,
		1250793355,506921875,99060458,-1282503152,264704004,-1345926069,
		352391872,-1415813601,-2137663665,-1061937037
	};
	static
	{
		for (int i=0; i<_randomChecksums.length; i++)
			_randomChecksums[i] *= _randomChecksums[(i+113)%_randomChecksums.length];
	}
	
	public Checksum()
	{
		clear();
	}
	
	public final void clear()
	{
		_checksum = 0;
	}
	
	public final long getValue()
	{
		return _checksum;
	}
	
	public final void setValue(long checksum)
	{
		_checksum = checksum;
	}
	
	public void add(int xy, byte color)
	{
		if (color==BLACK)
			_checksum += _randomChecksums[xy];
		else
			_checksum -= _randomChecksums[xy];
	}
	
	public void remove(int xy, byte color)
	{
		if (color==BLACK)
			_checksum -= _randomChecksums[xy];
		else
			_checksum += _randomChecksums[xy];
	}
}
